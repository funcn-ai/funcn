{
  "$schema": "https://funcn.ai/schemas/component.json",
  "name": "pdf_search",
  "version": "0.1.0",
  "description": "PDF search tool that enables searching for text within PDF documents using fuzzy matching. Extracts text from PDFs and provides context-aware search results with page numbers and match scores.",
  "type": "tool",
  "authors": [
    {
      "name": "Funcn Project",
      "email": "info@funcn.ai"
    }
  ],
  "license": "MIT",
  "repository_url": "https://github.com/funcn-ai/funcn",
  "mirascope_version_min": "1.24.0",
  "files_to_copy": [
    {
      "source": "tool.py",
      "destination": "tool.py",
      "type": "module"
    },
    {
      "source": "__init__.py",
      "destination": "__init__.py",
      "type": "init_file"
    }
  ],
  "target_directory_key": "tools",
  "python_dependencies": [
    {
      "name": "PyPDF2",
      "version": ">=3.0.0"
    },
    {
      "name": "fuzzywuzzy",
      "version": ">=0.18.0"
    },
    {
      "name": "python-Levenshtein",
      "version": ">=0.12.0"
    },
    {
      "name": "pydantic",
      "version": ">=2.0.0"
    }
  ],
  "registry_dependencies": [],
  "environment_variables": [],
  "example_usage": "```python\nimport asyncio\nfrom pdf_search import search_pdf_content, PDFSearchArgs\n\nasync def main():\n    # Search for text in a PDF file\n    search_args = PDFSearchArgs(\n        file_path=\"documents/research_paper.pdf\",\n        query=\"machine learning algorithms\",\n        max_results=5,\n        context_chars=300,\n        fuzzy_threshold=75\n    )\n    \n    response = await search_pdf_content(search_args)\n    \n    if response.error:\n        print(f\"Error: {response.error}\")\n    else:\n        print(f\"Found {len(response.results)} matches in {response.total_pages} pages\")\n        for result in response.results:\n            print(f\"\\nPage {result.page_number} (Score: {result.match_score}%)\")\n            print(f\"Match: '{result.excerpt}'\")\n            print(f\"Context: {result.text}\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```",
  "post_add_instructions": "The PDF search tool is now available for searching text within PDF documents. It uses fuzzy matching to find relevant content even with slight variations. Key features:\n\n1. Fuzzy text matching with configurable threshold\n2. Context extraction around matches\n3. Page number tracking\n4. Async operation for non-blocking searches\n5. Structured response with match scores\n\nNote: python-Levenshtein is optional but recommended for better performance with fuzzy matching.",
  "tags": [
    "pdf",
    "search",
    "document",
    "text-extraction",
    "fuzzy-matching",
    "file-processing"
  ],
  "supports_lilypad": true,
  "template_variables": {},
  "mcp_compatible": false,
  "mcp_entrypoint": ""
}
