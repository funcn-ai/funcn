{
  "$schema": "https://funcn.ai/schemas/component.json",
  "name": "qwant_search_tools",
  "version": "0.2.0",
  "description": "Privacy-focused web search tools using Qwant search engine. Provides structured search results with no user tracking, using unified models compatible with other search providers.",
  "type": "tool",
  "authors": [
    {
      "name": "Funcn Project",
      "email": "info@funcn.ai"
    }
  ],
  "license": "MIT",
  "repository_url": "https://github.com/funcn-ai/funcn",
  "mirascope_version_min": "1.24.0",
  "files_to_copy": [
    {
      "source": "tool.py",
      "destination": "tool.py",
      "type": "module"
    },
    {
      "source": "__init__.py",
      "destination": "__init__.py",
      "type": "init_file"
    }
  ],
  "target_directory_key": "tools",
  "python_dependencies": [
    {
      "name": "httpx",
      "version": ">=0.24.0"
    },
    {
      "name": "pydantic",
      "version": ">=2.0.0"
    }
  ],
  "registry_dependencies": [],
  "environment_variables": [],
  "example_usage": "```python\nimport asyncio\nfrom qwant_search_tools import qwant_search, SearchArgs\n\nasync def main():\n    # Privacy-focused search\n    search_args = SearchArgs(\n        query=\"Python Mirascope library\", \n        max_results=5,\n        locale=\"en_US\"\n    )\n    results = await qwant_search(search_args)\n    \n    print(f\"Search provider: {results.provider}\")\n    print(f\"Query: {results.query}\")\n    for result in results.results:\n        print(f\"Title: {result.title}\")\n        print(f\"URL: {result.url}\")\n        print(f\"Snippet: {result.snippet}\")\n        print(\"---\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```",
  "post_add_instructions": "You can now use Qwant search tools in your agents for privacy-focused web searches. No API keys required! The tool uses unified models that work seamlessly with other search providers. Qwant doesn't track users or store search history.",
  "tags": [
    "qwant",
    "web_search",
    "privacy",
    "tools",
    "search_engine"
  ],
  "supports_lilypad": true,
  "template_variables": {},
  "mcp_compatible": false,
  "mcp_entrypoint": ""
}
