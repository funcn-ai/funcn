{
  "$schema": "https://funcn.ai/schemas/component.json",
  "name": "xml_search",
  "version": "0.1.0",
  "description": "XML data processing tool with XPath queries, namespace support, validation, and advanced search capabilities",
  "type": "tool",
  "authors": [
    {
      "name": "Funcn Project",
      "email": "info@funcn.ai"
    }
  ],
  "license": "MIT",
  "repository_url": "https://github.com/funcn-ai/funcn",
  "mirascope_version_min": "1.24.0",
  "files_to_copy": [
    {
      "source": "tool.py",
      "destination": "tool.py",
      "type": "module"
    },
    {
      "source": "__init__.py",
      "destination": "__init__.py",
      "type": "init_file"
    }
  ],
  "target_directory_key": "tools",
  "python_dependencies": [
    {
      "name": "mirascope[openai]",
      "version": ">=1.24.0"
    },
    {
      "name": "pydantic",
      "version": ">=2.0.0"
    },
    {
      "name": "lxml",
      "version": ">=4.9.0"
    },
    {
      "name": "aiofiles",
      "version": ">=23.0.0"
    }
  ],
  "environment_variables": [],
  "example_usage": "```python\nfrom ai_tools.xml_search import XMLSearchTool, search_xml_xpath, find_xml_elements\n\nasync def main():\n    # XPath search\n    result = await search_xml_xpath(\n        file_path=\"data.xml\",\n        xpath=\"//book[@category='fiction']/title\"\n    )\n    \n    # Find elements by attributes\n    products = await find_xml_elements(\n        file_path=\"catalog.xml\",\n        tag_names=[\"product\"],\n        attributes={\"status\": \"active\", \"type\": \"electronics\"}\n    )\n    \n    # Validate XML against schema\n    validation = await validate_xml_file(\n        file_path=\"document.xml\",\n        xsd_schema_path=\"schema.xsd\"\n    )\n```",
  "post_add_instructions": "You can now import the XML search tool with `from ai_tools.xml_search import XMLSearchTool`. The tool provides XPath queries, namespace handling, element search by text/attributes, and XML validation against XSD schemas.",
  "tags": [
    "xml",
    "xpath",
    "search",
    "validation",
    "xsd",
    "namespaces"
  ],
  "supports_lilypad": true,
  "template_variables": {
    "default_namespace_aware": true,
    "default_case_sensitive": true,
    "default_validate": false,
    "default_include_children": true
  },
  "mcp_compatible": false,
  "mcp_entrypoint": ""
}