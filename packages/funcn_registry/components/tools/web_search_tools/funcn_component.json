{
  "$schema": "https://funcn.ai/schemas/funcn_component.json",
  "name": "web_search_tools",
  "version": "0.1.0",
  "description": "Web search and URL content parsing tools using DuckDuckGo and BeautifulSoup. Provides both Mirascope pre-made tool integration and fallback implementations.",
  "type": "tool",
  "authors": [
    {"name": "Funcn Project", "email": "info@funcn.ai"}
  ],
  "license": "MIT",
  "repository_url": "https://github.com/funcn-ai/funcn",
  "mirascope_version_min": "1.24.0",
  "files_to_copy": [
    {"source": "tool.py", "destination": "tool.py", "type": "module"},
    {"source": "__init__.py", "destination": "__init__.py", "type": "init_file"}
  ],
  "target_directory_key": "tools",
  "python_dependencies": [
    {"name": "mirascope", "version": ">=1.24.0"},
    {"name": "beautifulsoup4", "version": ">=4.0.0"},
    {"name": "duckduckgo-search", "version": ">=5.0.0"},
    {"name": "httpx", "version": ">=0.24.0"},
    {"name": "pydantic", "version": ">=2.0.0"}
  ],
  "registry_dependencies": [],
  "environment_variables": [],
  "example_usage": "```python\nimport asyncio\nfrom web_search_tools import web_search, parse_url_content, WebSearchArgs, URLParseArgs\n\nasync def main():\n    # Search the web\n    search_args = WebSearchArgs(query=\"Mirascope Python library\", max_results=3)\n    search_results = await web_search(search_args)\n    \n    for result in search_results.results:\n        print(f\"Title: {result.title}\")\n        print(f\"URL: {result.url}\")\n        print(f\"Snippet: {result.snippet}\")\n        print(\"---\")\n        \n        # Parse URL content if available\n        if result.url:\n            parse_args = URLParseArgs(url=result.url, max_chars=1000)\n            content = await parse_url_content(parse_args)\n            print(f\"Content preview: {content[:200]}...\")\n            break\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```",
  "post_add_instructions": "You can now use the web search tools in your agents and applications. The tools will automatically use Mirascope's pre-made tools when available, with robust fallback implementations. Make sure to install the required dependencies: pip install beautifulsoup4 duckduckgo-search httpx",
  "tags": ["web_search", "tools", "duckduckgo", "url_parsing", "mirascope"],
  "supports_lilypad": true,
  "template_variables": {},
  "mcp_compatible": false,
  "mcp_entrypoint": ""
}
