{
  "$schema": "https://funcn.ai/schemas/component.json",
  "name": "text_summarization_agent",
  "version": "0.1.0",
  "description": "Advanced text summarization agent using chain-of-thought reasoning, few-shot learning, and iterative refinement. Supports multiple styles (technical, executive, simple, academic, journalistic) and progressive summarization with validation.",
  "type": "agent",
  "authors": [
    {
      "name": "Funcn Project",
      "email": "info@funcn.ai"
    }
  ],
  "license": "MIT",
  "repository_url": "https://github.com/funcn-ai/funcn",
  "mirascope_version_min": "1.24.0",
  "files_to_copy": [
    {
      "source": "agent.py",
      "destination": "text_summarization/agent.py",
      "type": "module"
    },
    {
      "source": "__init__.py",
      "destination": "text_summarization/__init__.py",
      "type": "init_file"
    }
  ],
  "target_directory_key": "agents",
  "python_dependencies": [
    {
      "name": "mirascope",
      "version": ">=1.24.0"
    },
    {
      "name": "pydantic",
      "version": ">=2.0.0"
    },
    {
      "name": "lilypad",
      "version": ">=0.1.0"
    }
  ],
  "registry_dependencies": [],
  "environment_variables": [
    {
      "name": "OPENAI_API_KEY",
      "description": "API key for OpenAI services (if using OpenAI provider).",
      "required": false
    },
    {
      "name": "ANTHROPIC_API_KEY",
      "description": "API key for Anthropic services (if using Anthropic provider).",
      "required": false
    },
    {
      "name": "GOOGLE_API_KEY",
      "description": "API key for Google services (if using Google provider).",
      "required": false
    }
  ],
  "example_usage": "```python\nimport asyncio\nfrom text_summarization import (\n    summarize_text,\n    quick_summary,\n    executive_brief,\n    multi_style_summary\n)\n\nasync def main():\n    # Sample text\n    text = \"\"\"The breakthrough in quantum computing represents a paradigm shift in computational \n    capabilities. Researchers at MIT have successfully demonstrated a 127-qubit processor that \n    maintains coherence for unprecedented durations. This advancement addresses the fundamental \n    challenge of quantum decoherence that has plagued the field for decades. The implications \n    extend beyond theoretical physics into practical applications including cryptography, \n    drug discovery, and climate modeling. Industry leaders predict commercial viability within \n    five years, though significant engineering challenges remain.\"\"\"\n    \n    # Generate summary with validation and refinement\n    summary = await summarize_text(\n        text=text,\n        style=\"technical\",\n        validate=True\n    )\n    print(f\"Technical Summary: {summary.summary}\")\n    print(f\"Confidence: {summary.confidence_score}\")\n    print(f\"Key points preserved: {summary.preserved_key_points}\")\n    \n    # Generate progressive summaries\n    progressive = await summarize_text(\n        text=text,\n        progressive=True\n    )\n    print(f\"\\nOne sentence: {progressive.one_sentence}\")\n    print(f\"\\nParagraph: {progressive.paragraph}\")\n    print(f\"\\nKey takeaways:\")\n    for takeaway in progressive.key_takeaways:\n        print(f\"  - {takeaway}\")\n    \n    # Quick summary\n    quick = await quick_summary(text)\n    print(f\"\\nQuick summary: {quick}\")\n    \n    # Executive brief with metrics\n    brief = await executive_brief(text)\n    print(f\"\\nExecutive Brief:\")\n    print(f\"  One-liner: {brief['one_line']}\")\n    print(f\"  Summary: {brief['summary']}\")\n    print(f\"  Confidence: {brief['confidence']}\")\n    \n    # Multi-style summaries\n    styles = await multi_style_summary(text, [\"technical\", \"simple\", \"executive\"])\n    print(f\"\\nMulti-style summaries:\")\n    for style, summary in styles.items():\n        print(f\"\\n{style.capitalize()}: {summary}\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```",
  "post_add_instructions": "This agent provides advanced summarization capabilities with multiple techniques:\n\n1. **Chain-of-Thought Analysis**: Analyzes text structure, complexity, and audience before summarization\n2. **Few-Shot Learning**: Uses style-specific examples for consistent output\n3. **Progressive Summarization**: Creates summaries at multiple detail levels\n4. **Validation & Refinement**: Iteratively improves summaries based on quality checks\n5. **Multiple Styles**: technical, executive, simple, academic, journalistic\n\nThe agent automatically determines optimal summary length and validates accuracy. Set your preferred LLM provider's API key.",
  "tags": [
    "summarization",
    "text_processing",
    "agent",
    "mirascope",
    "chain_of_thought",
    "few_shot",
    "nlp",
    "progressive",
    "validation",
    "lilypad"
  ],
  "supports_lilypad": true,
  "template_variables": {
    "provider": "openai",
    "model": "gpt-4o-mini",
    "style": "executive",
    "validate": true
  },
  "mcp_compatible": false,
  "mcp_entrypoint": ""
}