{
  "$schema": "https://funcn.ai/schemas/component.json",
  "name": "enhanced_knowledge_graph_agent",
  "version": "0.1.0",
  "description": "Enhanced knowledge graph extraction using advanced prompt engineering. Features meta-reasoning for strategy planning, chain-of-thought entity extraction with detailed reasoning, multi-pass relationship detection, and self-consistency validation for high-accuracy results.",
  "type": "agent",
  "authors": [
    {
      "name": "Funcn Project",
      "email": "info@funcn.ai"
    }
  ],
  "license": "MIT",
  "repository_url": "https://github.com/funcn-ai/funcn",
  "mirascope_version_min": "1.24.0",
  "files_to_copy": [
    {
      "source": "agent.py",
      "destination": "enhanced_knowledge_graph/agent.py",
      "type": "module"
    },
    {
      "source": "__init__.py",
      "destination": "enhanced_knowledge_graph/__init__.py",
      "type": "init_file"
    }
  ],
  "target_directory_key": "agents",
  "python_dependencies": [
    {
      "name": "mirascope",
      "version": ">=1.24.0"
    },
    {
      "name": "pydantic",
      "version": ">=2.0.0"
    },
    {
      "name": "lilypad",
      "version": ">=0.1.0"
    }
  ],
  "registry_dependencies": [],
  "environment_variables": [
    {
      "name": "OPENAI_API_KEY",
      "description": "API key for OpenAI services (if using OpenAI provider).",
      "required": false
    },
    {
      "name": "ANTHROPIC_API_KEY",
      "description": "API key for Anthropic services (if using Anthropic provider).",
      "required": false
    },
    {
      "name": "GOOGLE_API_KEY",
      "description": "API key for Google services (if using Google provider).",
      "required": false
    }
  ],
  "example_usage": "```python\nimport asyncio\nfrom enhanced_knowledge_graph import extract_enhanced_knowledge_graph\n\nasync def main():\n    # Sample text with complex relationships\n    text = \"\"\"Tesla, Inc., led by CEO Elon Musk, announced a partnership with Panasonic \n    to build a new Gigafactory in Nevada. The $5 billion facility will produce batteries \n    for Tesla's electric vehicles, including the Model 3, which was unveiled in 2016. \n    Musk, who also founded SpaceX and co-founded PayPal, stated that the factory will \n    employ over 6,500 workers and aims to reduce battery costs by 30%. The Nevada \n    government offered $1.3 billion in tax incentives to secure the project.\"\"\"\n    \n    # Extract enhanced knowledge graph with full features\n    result = await extract_enhanced_knowledge_graph(\n        text=text,\n        domain=\"business/technology\",\n        use_multi_pass=True,\n        use_self_consistency=True,\n        confidence_threshold=0.7\n    )\n    \n    # Display extraction plan\n    print(\"Extraction Strategy:\")\n    print(f\"  Strategy: {result['extraction_plan']['extraction_strategy']}\")\n    print(f\"  Entity Categories: {result['extraction_plan']['entity_categories']}\")\n    print(f\"  Relationship Patterns: {result['extraction_plan']['relationship_patterns']}\")\n    \n    # Display entities with reasoning\n    print(f\"\\nEntities Found ({result['metadata']['total_entities']}):\")\n    for entity in result['entities']:\n        print(f\"\\n  Entity: {entity['name']}\")\n        print(f\"  Type: {entity['type']}\")\n        print(f\"  Confidence: {entity['confidence']:.2f}\")\n        print(f\"  Reasoning: {entity['reasoning']}\")\n        print(f\"  Context Clues: {entity['context_clues']}\")\n    \n    # Display relationships with evidence\n    print(f\"\\nRelationships Found ({result['metadata']['total_relationships']}):\")\n    for rel in result['relationships']:\n        print(f\"\\n  {rel['source']} --[{rel['type']}]--> {rel['target']}\")\n        print(f\"  Confidence: {rel['confidence']:.2f}\")\n        print(f\"  Reasoning: {rel['reasoning']}\")\n        print(f\"  Evidence: '{rel['evidence']}'\")\n    \n    # Display consistency validation\n    if result['consistency_validation']:\n        print(f\"\\nConsistency Validation:\")\n        print(f\"  Consistent Entities: {result['consistency_validation']['consistent_entities']}\")\n        print(f\"  Confidence Boost: {result['consistency_validation']['confidence_boost']}\")\n    \n    # Display metadata\n    print(f\"\\nMetadata:\")\n    print(f\"  Average Confidence: {result['metadata']['avg_confidence']:.2f}\")\n    \n    # Example without advanced features for comparison\n    simple_result = await extract_enhanced_knowledge_graph(\n        text=text,\n        use_multi_pass=False,\n        use_self_consistency=False\n    )\n    print(f\"\\nSimple extraction found {len(simple_result['entities'])} entities\")\n    print(f\"Enhanced extraction found {len(result['entities'])} entities\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```",
  "post_add_instructions": "This enhanced agent provides advanced knowledge graph extraction with:\n\n1. **Meta-Reasoning**: Plans extraction strategy based on text type and domain\n2. **Chain-of-Thought**: Detailed reasoning for each entity and relationship\n3. **Multi-Pass Extraction**: \n   - Pass 1: Explicit relationships\n   - Pass 2: Implicit relationships\n   - Pass 3: Transitive relationships\n4. **Self-Consistency**: Validates through multiple extraction attempts\n5. **Confidence Scoring**: Evidence-based confidence with reasoning\n\nThe agent provides explanations for all extractions, making results interpretable and debuggable. Set your preferred LLM provider's API key.",
  "tags": [
    "knowledge_graph",
    "entity_extraction",
    "relationship_extraction",
    "agent",
    "mirascope",
    "chain_of_thought",
    "meta_reasoning",
    "self_consistency",
    "multi_pass",
    "reasoning",
    "lilypad"
  ],
  "supports_lilypad": true,
  "template_variables": {
    "provider": "openai",
    "model": "gpt-4o-mini",
    "use_multi_pass": true,
    "use_self_consistency": true,
    "confidence_threshold": 0.7
  },
  "mcp_compatible": false,
  "mcp_entrypoint": ""
}
