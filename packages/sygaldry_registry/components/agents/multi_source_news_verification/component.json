{
  "$schema": "https://sygaldry.ai/schemas/component.json",
  "name": "multi_source_news_verification",
  "version": "0.4.1",
  "description": "Advanced multi-source news verification agent with comprehensive fact-checking tools including academic search, government data verification, social media verification, and expert source validation for combating misinformation",
  "type": "agent",
  "authors": [
    {
      "name": "Sygaldry Project",
      "email": "info@sygaldry.ai"
    }
  ],
  "license": "MIT",
  "repository_url": "https://github.com/greyhaven-ai/sygaldry",
  "mirascope_version_min": "1.24.0",
  "files_to_copy": [
    {
      "source": "agent.py",
      "destination": "agent.py",
      "type": "module"
    },
    {
      "source": "__init__.py",
      "destination": "__init__.py",
      "type": "init_file"
    }
  ],
  "target_directory_key": "agents",
  "python_dependencies": [
    "mirascope>=1.24.0",
    "pydantic>=2.0.0",
    "asyncio"
  ],
  "optional_dependencies": [
    "duckduckgo-search>=6.0.0",
    "exa-py>=1.0.0"
  ],
  "registry_dependencies": [],
  "environment_variables": [
    {
      "name": "OPENAI_API_KEY",
      "description": "OpenAI API key for LLM calls",
      "required": true
    },
    {
      "name": "EXA_API_KEY",
      "description": "Exa API key for advanced web search (optional, enhances real-time verification)",
      "required": false
    }
  ],
  "example_usage": "```python\nfrom multi_source_news_verification import (\n    multi_source_news_verification,\n    multi_source_news_verification_stream\n)\n\n# Example 1: Verify scientific/medical claims with academic sources\nresult = await multi_source_news_verification(\n    article_content=\"\"\"New study claims vitamin D supplements can prevent 90% of COVID-19 cases.\n    Researchers at unnamed institute say results are conclusive.\n    No peer review mentioned.\"\"\",\n    headline=\"Vitamin D: The COVID Cure We've Been Waiting For?\",\n    topic_area=\"Health/Medical\",\n    use_realtime_search=True\n)\n\n# The agent will automatically:\n# - Search academic databases (PubMed, Google Scholar)\n# - Check medical fact-checking sites\n# - Consult expert medical sources\n# - Verify with WHO/CDC data\n\nprint(f\"Credibility: {result.overall_credibility.value}\")\nprint(f\"Misinformation Risk: {result.misinformation_risk}\")\n\n# Example 2: Verify statistical/government claims\nresult = await multi_source_news_verification(\n    article_content=\"\"\"Unemployment hits record low of 2.1% according to sources.\n    Economy growing at 8% annually. Crime down 75% nationwide.\"\"\",\n    headline=\"Economic Miracle: All Indicators Point to Success\",\n    topic_area=\"Economics/Politics\",\n    use_realtime_search=True\n)\n\n# The agent will:\n# - Search government databases (BLS, Census, FBI stats)\n# - Cross-reference with economic fact-checkers\n# - Verify with official government sources\n# - Check historical data for context\n\n# Example 3: Verify social media viral claims\nresult = await multi_source_news_verification(\n    article_content=\"\"\"Celebrity tweet goes viral claiming new law bans all pets.\n    Screenshot shows verified account. 10 million retweets in 2 hours.\n    Government officials silent.\"\"\",\n    headline=\"Celebrity Exposes Secret Pet Ban Law\",\n    context=\"Claim originated on Twitter/X\",\n    use_realtime_search=True\n)\n\n# The agent will:\n# - Search for original social media posts\n# - Verify account authenticity\n# - Check for deleted posts or manipulated screenshots\n# - Search government sources for actual laws\n# - Look for official responses\n\n# Example 4: Verify images/videos in news\nresult = await multi_source_news_verification(\n    article_content=\"\"\"Shocking video shows massive crowds at political rally.\n    Aerial footage reveals unprecedented turnout.\n    Opposition claims video is from different event.\"\"\",\n    headline=\"Record-Breaking Rally or Recycled Footage?\",\n    use_realtime_search=True\n)\n\n# The agent will:\n# - Search for original source of images/video\n# - Check reverse image search results\n# - Look for fact-checks on the visual content\n# - Verify date and location claims\n\n# Example 5: Academic research verification\nresult = await multi_source_news_verification(\n    article_content=\"\"\"MIT researchers discover room temperature superconductor.\n    Paper published in prestigious journal. Other labs confirming results.\n    Could revolutionize technology.\"\"\",\n    headline=\"Scientific Breakthrough of the Century?\",\n    topic_area=\"Science/Technology\",\n    use_realtime_search=True\n)\n\n# Access detailed verification by claim type\nanalysis = result.verification.news_analysis\nfor claim, claim_type in analysis.claim_types.items():\n    print(f\"\\nClaim: {claim}\")\n    print(f\"Type: {claim_type.value}\")\n    # Agent uses appropriate tools based on claim type\n\n# Example 6: Multi-faceted story verification\nresult = await multi_source_news_verification(\n    article_content=\"\"\"Senator claims crime up 200% citing new study.\n    Posts graph on social media showing dramatic spike.\n    Opponents say data is manipulated. Police chief disputes numbers.\n    Academic researchers call methodology flawed.\"\"\",\n    headline=\"Crime Statistics Spark Political Firestorm\",\n    use_realtime_search=True\n)\n\n# The agent will use multiple tools:\n# - GovernmentDataTool for official crime statistics\n# - AcademicSearchTool for the mentioned study\n# - SocialMediaVerificationTool for the posted graph\n# - ExpertSourceTool for criminology experts\n# - FactCheckSearchTool for existing fact-checks\n\n# View which tools were used for each claim\nfor fact_check in result.verification.fact_checks:\n    print(f\"\\nClaim: {fact_check.claim}\")\n    print(f\"Verification Status: {fact_check.verification_status.value}\")\n    print(f\"Evidence Quality: {fact_check.evidence_quality}\")\n    print(f\"Primary Sources: {', '.join(fact_check.primary_sources[:2])}\")\n```",
  "post_add_instructions": "The Multi-Source News Verification Agent now includes comprehensive verification tools:\n\n**Verification Tools Available:**\n1. **Web Search**: General current information\n2. **Fact-Check Search**: 20+ verified fact-checking organizations\n3. **Academic Search**: Scientific papers, peer-reviewed research\n4. **Government Data**: Official statistics and statements\n5. **Reverse Image Search**: Verify visual content\n6. **Social Media Verification**: Authenticate viral claims\n7. **Expert Sources**: Academic and professional expertise\n\n**Trusted Fact-Checking Sources:**\n- **International**: Snopes, FactCheck.org, PolitiFact, Reuters Fact Check\n- **News Organizations**: AP Fact Check, Washington Post Fact Checker, CNN Facts First\n- **Regional**: Full Fact (UK), Chequeado (Latin America), Africa Check\n- **Specialized**: Lead Stories, Poynter Institute, Factly (India), Teyit (Turkey)\n- **Multi-language**: Maldita (Spain), Newtral (Spain), Boom Live (India)\n\n**Automatic Claim Routing:**\nThe agent automatically categorizes claims and uses appropriate tools:\n- Statistical claims \u2192 Government databases + Academic sources\n- Medical claims \u2192 PubMed + Medical fact-checkers + Expert sources\n- Political claims \u2192 Fact-checkers + Government sources\n- Social media claims \u2192 Platform verification + Original source search\n- Visual content \u2192 Reverse image search + Fact-checkers\n\n**Enhanced Capabilities:**\n- Searches verified fact-checking organizations globally\n- Accesses academic databases for scientific verification\n- Queries government statistics for data claims\n- Verifies social media posts and viral content\n- Checks expert opinions from universities and research institutions\n- Identifies manipulated images and videos\n\n**Setup:**\n1. Install optional dependencies for web search:\n   ```bash\n   pip install duckduckgo-search  # Free, no API key needed\n   pip install exa-py  # Advanced search, requires API key\n   ```\n\n2. Configure environment:\n   ```bash\n   export OPENAI_API_KEY=your_key\n   export EXA_API_KEY=your_key  # Optional, for enhanced search\n   ```\n\nThe agent provides transparent verification showing which tools were used and why, helping users understand the verification process and develop media literacy skills.",
  "tags": [
    "news-verification",
    "fact-checking",
    "media-literacy",
    "misinformation",
    "bias-detection",
    "source-credibility",
    "critical-thinking",
    "journalism",
    "real-time-search",
    "web-search",
    "academic-verification",
    "government-data",
    "social-media-verification",
    "image-verification",
    "expert-validation"
  ],
  "supports_lilypad": true,
  "template_variables": {},
  "mcp_compatible": false,
  "mcp_entrypoint": ""
}
