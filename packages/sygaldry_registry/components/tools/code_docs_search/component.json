{
  "$schema": "https://sygaldry.ai/schemas/component.json",
  "name": "code-docs-search-tool",
  "version": "0.1.0",
  "description": "Technical documentation search tool for API docs, README files, code comments, docstrings, and code examples",
  "type": "tool",
  "authors": [
    {
      "name": "Sygaldry Project",
      "email": "info@sygaldry.ai"
    }
  ],
  "license": "MIT",
  "repository_url": "https://github.com/greyhaven-ai/sygaldry",
  "mirascope_version_min": "1.24.0",
  "files_to_copy": [
    {
      "source": "tool.py",
      "destination": "tool.py",
      "type": "module"
    },
    {
      "source": "__init__.py",
      "destination": "__init__.py",
      "type": "init_file"
    }
  ],
  "target_directory_key": "tools",
  "python_dependencies": [
    "mirascope[openai]>=1.24.0",
    "pydantic>=2.0.0",
    "aiofiles>=23.0.0",
    "markdown>=3.4.0",
    "pyyaml>=6.0.0"
  ],
  "environment_variables": [],
  "example_usage": "```python\nfrom ai_tools.code_docs_search import CodeDocsSearchTool, search_documentation, find_code_examples\n\nasync def main():\n    # Search documentation\n    docs = await search_documentation(\n        query=\"authentication\",\n        path=\"./docs\",\n        max_results=10\n    )\n    \n    # Find code examples\n    examples = await find_code_examples(\n        topic=\"database connection\",\n        languages=[\"py\", \"js\"]\n    )\n    \n    # Search API documentation\n    api_docs = await search_api_docs(\n        api_name=\"create_user\",\n        path=\"./src\"\n    )\n```",
  "post_add_instructions": "You can now import the code docs search tool with `from ai_tools.code_docs_search import CodeDocsSearchTool`. The tool searches technical documentation including markdown files, code comments, docstrings, and JSDoc. It prioritizes README files and provides relevance scoring.",
  "tags": [
    "documentation",
    "api-docs",
    "markdown",
    "docstrings",
    "code-search",
    "technical-docs"
  ],
  "supports_lilypad": true,
  "template_variables": null,
  "mcp_compatible": false,
  "mcp_entrypoint": ""
}
